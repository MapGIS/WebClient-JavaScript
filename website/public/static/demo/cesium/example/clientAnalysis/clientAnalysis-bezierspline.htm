<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8' />
    <title>Along</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <!--引入第三方的jquery脚本库-->
    <script include="jquery" src="./static/libs/include-lib-local.js"></script>
    <!--Cesium脚本库文件引用-->
    <script include="geohash,geojson,turf,cesium-1.59" src="./static/libs/include-cesium-local.js"></script>
    <!--当前示例页面样式表引用-->
    <link rel="stylesheet" href="./static/demo/cesium/style.css" />
</head>

<body>

    <div id='GlobeView'></div>
    <script>
        //定义三维视图的主要类变量
        var webGlobe, map;
        //构造线对象、贝兹曲线geojson对象
        var line, geojson;
        //加载三维场景控件
        initMap();
        //加载数据
        loadData();
        //执行贝兹曲线
        excuteBezier();
        //更新视图
        updateView();
        //加载三维场景控件函数
        function initMap() {
            //定义三维视图的主要类
            webGlobe = new Cesium.WebSceneControl('GlobeView', {
                terrainExaggeration: 1,
            });
            //获取三维场景视图对象
            map = webGlobe.viewer;

            //构造第三方图层对象
            var thirdPartyLayer = new CesiumZondy.Layer.ThirdPartyLayer({
                viewer: webGlobe.viewer
            });
            //加载天地图
            var tdtLayer = thirdPartyLayer.appendTDTuMap({
                //天地图经纬度数据
                url: 'http://t0.tianditu.com/DataServer?T=vec_c&X={x}&Y={y}&L={l}',
                //开发token （请到天地图官网申请自己的开发token，自带token仅做功能验证随时可能失效）
                token: "9c157e9585486c02edf817d2ecbc7752",
                //地图类型 'vec'矢量 'img'影像 'ter'地形
                ptype: "img"
            });

            //经纬度坐标转世界坐标
            var center = Cesium.Cartesian3.fromDegrees(18.427501, -76.091308, 800000.0);
            //场景定位跳转
            map.scene.camera.setView({
                destination: center
            });
        }
        //加载数据函数
        function loadData() {
            line = turf.lineString([
                [-76.091308, 18.427501],
                [-76.695556, 18.729501],
                [-76.552734, 19.40443],
                [-74.61914, 19.134789],
                [-73.652343, 20.07657],
                [-73.157958, 20.210656]
            ]);
        }
        //贝兹曲线函数
        function excuteBezier() {
            geojson = turf.bezierSpline(line);
        }

        //更新视图函数
        function updateView() {
            //添加线显示
            var routedatasource = map.dataSources.add(Cesium.GeoJsonDataSource.load(line, {
                //线颜色
                stroke: Cesium.Color.GRAY,
                //填充色
                fill: Cesium.Color.GRAY,
                //线宽
                strokeWidth: 5
            }));
            //添加贝兹曲线显示
            var simpledatasource = map.dataSources.add(Cesium.GeoJsonDataSource.load(geojson, {
                //线颜色
                stroke: Cesium.Color.RED,
                //填充色
                fill: Cesium.Color.RED,
                //线宽
                strokeWidth: 5
            }));
            //跳转至显示线的区域
            map.flyTo(routedatasource);
        }
    </script>

</body>

</html>