<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta charset='utf-8' />
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <title>火焰特效</title>
    <!--引入第三方的jquery脚本库-->
    <script include="jquery" src="./static/libs/include-lib-local.js"></script>
    <script src="./static/libs/include-cesium-local.js"></script>
    <!--当前示例页面样式表引用-->
    <link rel="stylesheet" href="./static/demo/cesium/style.css" />
    <script>
        'use strict';
        //定义三维视图的主要类
        var webGlobe;
        //火焰粒子
        var fireObj;
        //地图初始化函数
        function init() {
            //构造三维视图类（视图容器div的id，三维视图设置参数）
            webGlobe = new Cesium.WebSceneControl('GlobeView', {
                terrainExaggeration: 1,
            });
            //构造视图功能管理对象（视图）
            var sceneManager = new CesiumZondy.Manager.SceneManager({
                viewer: webGlobe.viewer
            });
            //设置鼠标位置信息展示控件：经纬度、高程、视角高度（容器id）
            sceneManager.showPosition('coordinate_location');

            //构造第三方图层对象
            var thirdPartyLayer = new CesiumZondy.Layer.ThirdPartyLayer({
                viewer: webGlobe.viewer
            });
            //添加Google地图
            thirdPartyLayer.appendOsmMap();

            //构造M3D模型层管理对象（视图）
            var m3dLayer = new CesiumZondy.Layer.M3DLayer({
                viewer: webGlobe.viewer
            });
            //加载M3D地图文档（服务地址，配置参数）
            var {
                protocol,
                ip,
                port
            } = window.webclient;
            var landscapeLayer = m3dLayer.append(`${protocol}://${ip}:${port}/igs/rest/g3d/ZondyModels`, {
                //是否自动定位到数据位置
                autoReset: false,
                //模型细节显示控制参数：较大值可提高渲染性能，较低值可提高视觉质量
                maximumScreenSpaceError: 8
            });

            //视点跳转（经度，纬度，视角高度，方位角，俯仰角，翻滚角）
            sceneManager.flyToEx(114.39969287363587, 30.46955973483767, {
                height: 139,
                heading: 140,
                pitch: -20,
                roll: 0
            });


            //初始化高级分析功能管理类
            var advancedAnalysisManager = new CesiumZondy.Manager.AdvancedAnalysisManager({
                viewer: webGlobe.viewer
            });
            //位置点
            let position = [114.40103, 30.4679, 12];
            //火焰图片url
            let imageUrl = './static/data/effect/fire.png';
            //添加火焰粒子特效
            fireObj = advancedAnalysisManager.createStableParticle(imageUrl, position);

            var viewer = webGlobe.viewer;
            //开启计时
            viewer.clock.shouldAnimate = true;
            var scene = viewer.scene;
            //开启对数深度缓冲区
            scene.logarithmicDepthBuffer = true;

            //火焰特效初始参数
            var viewModel = {
                emissionRate: 5.0, //排放率
                particleLife: 1.2, //粒子生命
                speed: 2.0, //速度
                startScale: 1.0, //起始规模
                endScale: 5.0, //终止规模
                particleSize: 25.0 //图像尺寸
            };
            //火焰参数设置绑定UI
            Cesium.knockout.track(viewModel);
            var toolbar = document.getElementById('toolbar');
            Cesium.knockout.applyBindings(viewModel, toolbar);

            function subscribeParameter(name) {
                Cesium.knockout.getObservable(viewModel, name).subscribe(
                    function(newValue) {
                        if (name === 'emissionRate') {
                            //排放率
                            fireObj.emissionRate = parseFloat(newValue);
                        }
                        if (name === 'particleSize') {
                            var particleSize = parseFloat(newValue);
                            fireObj.minimumImageSize.x = particleSize;
                            fireObj.minimumImageSize.y = particleSize;
                            fireObj.maximumImageSize.x = particleSize;
                            fireObj.maximumImageSize.y = particleSize;
                            //图像尺寸
                            fireObj.imageSize = new Cesium.Cartesian2(particleSize, particleSize);

                        }
                        if (name === 'particleLife') {
                            //粒子生命
                            fireObj.particleLife = parseFloat(newValue);
                        }
                        if (name === 'speed') {
                            //速度
                            fireObj.speed = parseFloat(newValue);
                        }

                        if (name === 'startScale') {
                            //起始规模
                            fireObj.startScale = parseFloat(newValue);
                        }
                        if (name === 'endScale') {
                            //终止规模
                            fireObj.endScale = parseFloat(newValue);
                        }
                    }
                );
                scene.requestRender();
            }
            //改变属性值时调用
            subscribeParameter('emissionRate');
            subscribeParameter('particleSize');
            subscribeParameter('particleLife');
            subscribeParameter('speed');
            subscribeParameter('startScale');
            subscribeParameter('endScale');

            //fireObj._fire.show = false;
        }
    </script>
</head>

<body onload="init()">
    <div id="GlobeView"></div>
    <!--位置信息容器-->
    <div id="coordinateDiv" class="coordinateClass">
        <label id="coordinate_location"></label>
    </div>
    <div class="message" id="toolbar" style="left: 10px; ">
        <table>
            <tbody>
                <tr>
                    <td>排放率(emissionRate)</td>
                    <td>
                        <input type="range" min="0.0" max="100.0" step="1" data-bind="value: emissionRate, valueUpdate: 'input'">
                        <input type="text" size="5" data-bind="value: emissionRate">
                    </td>
                </tr>

                <tr>
                    <td>图像尺寸(imageSize)</td>
                    <td>
                        <input type="range" min="2" max="60.0" step="1" data-bind="value: particleSize, valueUpdate: 'input'">
                        <input type="text" size="5" data-bind="value: particleSize">
                    </td>
                </tr>

                <tr>
                    <td>粒子生命(particleLife)</td>
                    <td>
                        <input type="range" min="0.1" max="30.0" step="1" data-bind="value: particleLife, valueUpdate: 'input'">
                        <input type="text" size="5" data-bind="value: particleLife">
                    </td>
                </tr>


                <tr>
                    <td>速度(speed)</td>
                    <td>
                        <input type="range" min="0.0" max="30.0" step="1" data-bind="value: speed, valueUpdate: 'input'">
                        <input type="text" size="5" data-bind="value: speed">
                    </td>
                </tr>

                <tr>
                    <td>起始规模(startScale)</td>
                    <td>
                        <input type="range" min="0.0" max="10.0" step="1" data-bind="value: startScale, valueUpdate: 'input'">
                        <input type="text" size="5" data-bind="value: startScale">
                    </td>
                </tr>

                <tr>
                    <td>终止规模(endScale)</td>
                    <td>
                        <input type="range" min="0.0" max="10.0" step="1" data-bind="value: endScale, valueUpdate: 'input'">
                        <input type="text" size="5" data-bind="value: endScale">
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</body>

</html>