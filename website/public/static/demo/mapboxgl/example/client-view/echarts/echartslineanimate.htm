<!DOCTYPE html>
<html xmlns='http://www.w3.org/1999/xhtml'>

<head>
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
    <title>公交路线</title>
    <script include='jquery' src='./static/libs/include-lib-local.js'></script>
    <script include='language,echarts' src='./static/libs/include-mapboxgl-local.js'></script>
    <link href='./static/demo/mapboxgl/example/style.css' rel='stylesheet' type='text/css' />
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>

<body>
<div id='map'>
    <div id='mouse-position'>
    </div>
</div>
<script>
    //一定要去mapbox注册一个key,这个key会失效的
    mapboxgl.accessToken =
        'pk.eyJ1IjoicGFybmRlZWRsaXQiLCJhIjoiY2o1MjBtYTRuMDhpaTMzbXhpdjd3YzhjdCJ9.sCoubaHF9-nhGTA-sgz0sA';
    var map = new mapboxgl.Map({
        container: 'map', // 绑定div
        style: 'mapbox://styles/mapbox/dark-v9', // 使用MapBox官方的样式
        center: [116, 40],
        zoom: 9
    });
    map.addControl(new MapboxLanguage(), 'top-right'); //中文支持
    //注册鼠标移动事件
    map.on('mousemove', function(e) {
        //经纬度坐标转web墨卡托
        const earthRad = 6378137.0;
        const x = e.lngLat.lng * Math.PI / 180 * earthRad;
        const a = e.lngLat.lat * Math.PI / 180;
        const y = earthRad / 2 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a)));
        document.getElementById('mouse-position').innerHTML = 'X轴：' + x.toFixed(2) + '，Y轴：' + y.toFixed(2);
    });
    updateView();

    function updateView() {
        $.get('../../static/data/echarts/line-bus.geojson', function(data) {
            if (typeof data === 'string') {
                data = JSON.parse(data);
            }
            var hStep = 300 / (data.length - 1);
            busLines = [].concat.apply([], data.map(function(busLine, idx) {
                var prevPt;
                var points = [];
                for (var i = 0; i < busLine.length; i += 2) {
                    var pt = [busLine[i], busLine[i + 1]];
                    if (i > 0) {
                        pt = [
                            prevPt[0] + pt[0],
                            prevPt[1] + pt[1]
                        ];
                    }
                    prevPt = pt;

                    points.push([pt[0] / 1e4, pt[1] / 1e4]);
                }
                return {
                    coords: points,
                    lineStyle: {
                        normal: {
                            color: echarts.color.modifyHSL('#5A94DF', Math.round(hStep * idx))
                        }
                    }
                };
            }));
            var option = {
                mapboxgl: {
                    roam: true
                },
                series: [{
                    type: 'lines',
                    coordinateSystem: 'mapboxgl',
                    polyline: true,
                    data: busLines,
                    silent: true,
                    lineStyle: {
                        normal: {
                            // color: '#c23531',
                            // color: 'rgb(200, 35, 45)',
                            opacity: 0.2,
                            width: 1
                        }
                    },
                    progressiveThreshold: 500,
                    progressive: 200
                }, {
                    type: 'lines',
                    coordinateSystem: 'mapboxgl',
                    polyline: true,
                    data: busLines,
                    lineStyle: {
                        normal: {
                            width: 0
                        }
                    },
                    effect: {
                        constantSpeed: 20,
                        show: true,
                        trailLength: 0.1,
                        symbolSize: 1.5
                    },
                    zlevel: 1
                }]
            };
            layer = new mapboxgl.zondy.EchartsLayer(map, option).addTo(map);
        });

    }
</script>


</body>

</html>