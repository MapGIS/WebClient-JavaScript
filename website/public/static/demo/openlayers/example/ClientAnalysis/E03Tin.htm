<!DOCTYPE html>
<html>

<head>
  <meta charset='utf-8' />
  <title>Measure distances</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script include="jquery" src="./static/libs/include-lib-local.js"></script>
  <script include="turf" src="./static/libs/include-openlayers-local.js"></script>
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
  </style>
</head>

<body>

  <div id='map'></div>

  <script>
    var map = new ol.Map({
      //地图容器div的ID
      target: 'map',
      //地图容器中加载的图层
      layers: [],
      //地图视图设置
      view: new ol.View({
        //地图初始中心点
        center: ol.proj.fromLonLat([114.289398, 30.59418345]),
        //地图初始显示级别
        zoom: 8,
        //最小级别
        minZoom: 1,
        //最大级别
        maxZoom: 20
      })
    });
    var geojson;

    initMap();
    loadData();

    function initMap() {
      map.addLayer(new ol.layer.Tile({
             source: new ol.source.TileImage({
                url: 'https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoid2FuZ2hhaGExIiwiYSI6ImNqeHUycXF5ZDEweDQzYnBiOTcwZGoxMHAifQ.eCGuiA6erHJ7ew-Fkc7dRA'  
            })
      }));
    }

    function loadData() {
      $.getJSON('./static/data/client-analysis/point.json', function (data) {
        convertDataToGeoJson(data);
        updateView(geojson);
      });
    }

    function convertDataToGeoJson(origindata) {
      var points = origindata;
      geojson = turf.tin(points);
    }

    function updateView(origindata) {
      let styles = {
        'Point': new ol.style.Style({
          color: 'green',
          width: 1
        }),
        'LineString': new ol.style.Style({
          stroke: new ol.style.Stroke({
            color: 'green',
            width: 1
          })
        }),
        'MultiLineString': new ol.style.Style({
          stroke: new ol.style.Stroke({
            color: 'green',
            width: 1
          })
        }),
        'MultiPoint': new ol.style.Style({
          color: 'green',
          width: 1
        }),
        'MultiPolygon': new ol.style.Style({
          stroke: new ol.style.Stroke({
            color: 'yellow',
            width: 1
          }),
          fill: new ol.style.Fill({
            color: 'rgba(255, 255, 0, 0.1)'
          })
        }),
        'Polygon': new ol.style.Style({
          stroke: new ol.style.Stroke({
            color: 'blue',
            lineDash: [4],
            width: 2
          }),
          fill: new ol.style.Fill({
            color: 'rgba(0, 0, 255, 0.1)'
          })
        })
      };

      var styleFunction = function (feature) {
        return styles[feature.getGeometry().getType()];
      };

      var source = new ol.source.Vector();

      geojson = turf.buffer(origindata, 1.5, {
        units: 'miles'
      });

      let features = geojson.features;
      for (var i = 0; i < features.length; i++) {
        let oljson = new ol.format.GeoJSON();
        let feature = oljson.readFeature(features[i]);
        feature.getGeometry().transform('EPSG:4326', 'EPSG:3857');
        source.addFeature(feature);
      }

      map.addLayer(new ol.layer.Vector({
        source: source,
        style: styleFunction
      }))
    }
  </script>

</body>

</html>