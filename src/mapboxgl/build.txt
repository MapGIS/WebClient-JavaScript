yarn run v1.22.4
$ npm run build-debug && npm run build-release

> @mapgis/webclient-es6-mapboxgl@16.0.3 build-debug
> webpack --config webpack/mapbox-es6-debug-config.js

Installing 'webpack-cli' (running 'yarn add -D webpack-cli')...
[1/4] Resolving packages...
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Saved lockfile.
success Saved 25 new dependencies.
info Direct dependencies
â””â”€ webpack-cli@4.10.0
info All dependencies
â”œâ”€ @discoveryjs/json-ext@0.5.7
â”œâ”€ @webpack-cli/configtest@1.2.0
â”œâ”€ @webpack-cli/info@1.5.0
â”œâ”€ @webpack-cli/serve@1.7.0
â”œâ”€ clone-deep@4.0.1
â”œâ”€ colorette@2.0.19
â”œâ”€ cross-spawn@7.0.3
â”œâ”€ envinfo@7.8.1
â”œâ”€ fastest-levenshtein@1.0.16
â”œâ”€ import-local@3.1.0
â”œâ”€ interpret@2.2.0
â”œâ”€ is-plain-object@2.0.4
â”œâ”€ isexe@2.0.0
â”œâ”€ isobject@3.0.1
â”œâ”€ path-key@3.1.1
â”œâ”€ rechoir@0.7.1
â”œâ”€ resolve-cwd@3.0.0
â”œâ”€ resolve-from@5.0.0
â”œâ”€ shallow-clone@3.0.1
â”œâ”€ shebang-command@2.0.0
â”œâ”€ shebang-regex@3.0.0
â”œâ”€ webpack-cli@4.10.0
â”œâ”€ webpack-merge@5.8.0
â”œâ”€ which@2.0.2
â””â”€ wildcard@2.0.0
asset [1m[32mwebclient-es6-mapboxgl.js[39m[22m 2.57 MiB [1m[32m[emitted][39m[22m (name: main)
runtime modules 937 bytes 4 modules
modules by path [1m./theme/[39m[22m 935 KiB 74 modules
modules by path [1m./layer/*.js[39m[22m 50 KiB
  [1m./layer/index.js[39m[22m 550 bytes [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m
  + 8 modules
modules by path [1m./overlay/[39m[22m 65.6 KiB
  modules by path [1m./overlay/*.js[39m[22m 50.2 KiB 4 modules
  + 2 modules
modules by path [1m./*.js[39m[22m 6.18 KiB
  [1m./index.js[39m[22m 1.08 KiB [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m
  [1m./MapExtend.js[39m[22m 5.1 KiB [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m
modules by path [1m./core/*.js[39m[22m 5.8 KiB
  [1m./core/Base.js[39m[22m 418 bytes [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m
  [1m./core/Util.js[39m[22m 5.39 KiB [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m
+ 5 modules

[1m[33mWARNING[39m[22m in [1m./index.js[39m[22m [1m[32m11:0-12:20[39m[22m
[1mexport 'FabricLayer' (reexported as 'FabricLayer') was [1m[31mnot found[39m[22m[1m in './overlay/index.js' (possible exports: [1m[32mDeckglLayer, EchartsLayer, MapvLayer[39m[22m[1m)[39m[22m

webpack 5.74.0 compiled with [1m[33m1 warning[39m[22m in 9840 ms

> @mapgis/webclient-es6-mapboxgl@16.0.3 build-release
> webpack --config webpack/mapbox-es6-release-config.js

asset [1m[33mwebclient-es6-mapboxgl.min.js[39m[22m [1m[33m1.63 MiB[39m[22m [1m[32m[emitted][39m[22m [1m[32m[minimized][39m[22m [1m[33m[big][39m[22m (name: main) 1 related asset
orphan modules 1.05 MiB [1m[33m[orphan][39m[22m 96 modules
runtime modules 663 bytes 3 modules
built modules 2.37 MiB [1m[33m[built][39m[22m
  [1m./index.js + 96 modules[39m[22m 1.05 MiB [1m[31m[not cacheable][39m[22m [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m
  [1m./node_modules/@mapgis/webclient-es6-service/dist-libs/webclient-es6-service.min.js[39m[22m 1.32 MiB [1m[33m[built][39m[22m [1m[33m[code generated][39m[22m

[1m[33mWARNING[39m[22m in [1m./index.js[39m[22m [1m[32m11:0-12:20[39m[22m
[1mexport 'FabricLayer' (reexported as 'FabricLayer') was [1m[31mnot found[39m[22m[1m in './overlay/index.js' (possible exports: [1m[32mDeckglLayer, EchartsLayer, MapvLayer[39m[22m[1m)[39m[22m

[1m[33mWARNING[39m[22m in [1masset size limit: The following asset(s) exceed the recommended size limit (244 KiB).
This can impact web performance.
Assets: 
  webclient-es6-mapboxgl.min.js (1.63 MiB)[39m[22m

[1m[33mWARNING[39m[22m in [1mentrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.
Entrypoints:
  main (1.63 MiB)
      webclient-es6-mapboxgl.min.js
[39m[22m

[1m[33mWARNING[39m[22m in [1mwebpack performance recommendations: 
You can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.
For more info visit https://webpack.js.org/guides/code-splitting/[39m[22m

webpack 5.74.0 compiled with [1m[33m4 warnings[39m[22m in 27793 ms
Done in 77.30s.
